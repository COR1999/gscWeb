// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/calendar" | "/club-info/club-commodores" | "/club-info/club-officers" | "/club-info/constitution" | "/club-info/history" | "/club-info/membership" | "/club-info/policies-procedures" | "/sailing/junior-sailing" | "/sailing/live-feeds" | "/sailing/results" | "/sailing/sailing-calendar-sis" | "/training"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/calendar": {}
  "/club-info/club-commodores": {}
  "/club-info/club-officers": {}
  "/club-info/constitution": {}
  "/club-info/history": {}
  "/club-info/membership": {}
  "/club-info/policies-procedures": {}
  "/sailing/junior-sailing": {}
  "/sailing/live-feeds": {}
  "/sailing/results": {}
  "/sailing/sailing-calendar-sis": {}
  "/training": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
